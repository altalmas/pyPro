very good 5 mins video: https://www.youtube.com/watch?v=elycr5wi9_g

Explanation:

------------- FOR A SINGLE FILE ---------------
    usually, if we have a main.cpp file that we want to execute (a hello world example), we can make
    it executable:

        0. Assume the hierarchy:
            myFolder
                |- main.cpp


        1. Compile the .cpp file:
            $ cd myFolder
            $ g++ -o sample main.cpp            // This compiles the main.cpp file
                                                // here:    g++ : is the c++ compiler
                                                            o-  : flag
                                                            sample : the resulting executable name
                                                            main.cpp : telling the compiler which src file to use to create the executable

        2. run the executable:
            $ ./sample


------------- FOR MULTIPLE FILES (BIG PROJECT) ---------------

        0. Assume the hierarchy:
            myFolder
                |- src
                |   |- main.cpp
                |- CMakeLists.txt

        1. create (CMakeLists.txt) file:
            Example:
                                '''
                                            cmake_minimum_required(VERSION 3.0)                        # tells (cmake) the minimum version to use to produce the (make) file

                                            set(CMAKE_BUILD_TYPE Debug)                                # set()  : a function used to set variables with their corresponding libraries
                                            set(CMAKE_CXX_FLAGS "-std=c++14")                          #       : tells the compiler that my code uses c++ 14 standard syntax
                                            # OR
                                            #set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14")      # : here I only append the (-std=c++14) flag on top the values (CMAKE_CXX_FLAGS) had

                                            project(sample)                                            # project name

                                            add_executable(
                                                sample                                                 # name of the executable that we want to produce
                                                main.cpp                                               # source files
                                                source1.cpp                                            # source files
                                                source2.cpp                                            # source files
                                            )       
                                '''

        2. produce the make file:
            $ cmake .
            This will create bunch of files:
                - cmake_install.cmake
                - CMakeCache.txt
                - Makefile
        
                but we care about the (Makefile)


        3. Produce the executable:
            $ make

        4. run the executable
            $ ./sample

            